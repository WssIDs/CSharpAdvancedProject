@page "/employee/edit/{Id:int}"
@using CSharpAdvancedProjectBLL.Models
@using CSharpAdvancedProjectBLL.Interfaces
@inject NavigationManager UriHelper
@inject ICompanyService CompanyService
@inject IEmployeeService EmployeeService
@inject IPositionService PositionService

<Title Value="Изменить данные сотрудника"></Title>
<h3>Изменить данные сотрудника</h3>

<Form Employee="@_employee" OnValidSubmit="@UpdateEmployee" ButtonSuccessText="Изменить" Companies="@_companies" Positions="@_positions"></Form>

@code {

    [Parameter]
    public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var id = Id ?? 0;

        _employee = await EmployeeService.GetAsync(id);

        _companies = await GetCompaniesAsync();
        _positions = await GetPositionsAsync();
    }

    EmployeeModel _employee = new();

    async Task UpdateEmployee()
    {
        await EmployeeService.UpdateAsync(_employee);
        UriHelper.NavigateTo("employee", true);
    }

    IEnumerable<CompanyModel> _companies;

    private async Task<IEnumerable<CompanyModel>> GetCompaniesAsync()
    {
        return await CompanyService.GetAllAsync();
    }

    IEnumerable<PositionModel> _positions;

    private async Task<IEnumerable<PositionModel>> GetPositionsAsync()
    {
        return await PositionService.GetAllAsync();
    }
}
