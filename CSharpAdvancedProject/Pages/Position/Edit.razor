@page "/position/edit/{Id:int}"
@using CSharpAdvancedProjectBLL.Models
@using CSharpAdvancedProjectBLL.Interfaces
@inject NavigationManager UriHelper
@inject IPositionService PositionService

<Title Value="Редактирование должности"></Title>
<h3>Редактирование должности</h3>

@if (_isBusy)
{
    <div class="spinner"></div>
}
else
{
    <Form Position="@_position" ButtonSuccessText="Изменить" OnValidSubmit="@EditPosition"></Form>

@if (_editFailed)
{
    <br/>
    <div class="alert alert-danger" role="alert">
        @_error
    </div>
}
}

@code {

    [Parameter]
    public int? Id { get; set; }

    bool _isBusy;
    bool _editFailed;
    string _error;
    PositionModel _position = new();

    protected override async Task OnInitializedAsync()
    {
        var id = Id ?? 0;

        _position = await PositionService.GetAsync(id);
    }

    async Task EditPosition()
    {
        try
        {
            _isBusy = true;
            _editFailed = false;
            await PositionService.UpdateAsync(_position);
            UriHelper.NavigateTo("position");
        }
        catch (Exception ex)
        {
            _editFailed = true;
            _error = ex.GetBaseException().Message;
        }
        finally
        {
            _isBusy = false;
        }
    }
}
