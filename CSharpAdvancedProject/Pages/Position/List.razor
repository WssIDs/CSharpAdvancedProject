@page "/position"
@using CSharpAdvancedProjectBLL.Interfaces
@using CSharpAdvancedProjectBLL.Models
@inject IPositionService PositionService

<Title Value="Cписок должностей"></Title>
<h3>Должности</h3>

<div class="form-group">
    <a class="btn btn-success" href="position/create"><i class="oi oi-plus"></i> Добавить</a>
</div>

@if (Positions == null)
{
    <div class="spinner"></div>
}
else if (!Positions.Any())
{
    <text>Данных нету</text>
}
else
{
    <TableTemplate Items="Positions" TItem="PositionModel">
        <TableHeader>
            <th>Наименование</th>
            <th>Действия</th>
        </TableHeader>
        <RowTemplate>
            <td>@context.Name</td>
            <td>
                <a class="btn btn-sm btn-outline-dark" title="Редактировать" href="position/edit/@context.Id"><i class="oi oi-pencil"></i></a>
                <a class="btn btn-sm btn-outline-danger" title="Удалить" href="position/delete/@context.Id"><i class="oi oi-trash"></i></a>
            </td>
        </RowTemplate>
    </TableTemplate>
}


@code {
    private IEnumerable<PositionModel> Positions { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetPositions();
    }

    private async Task GetPositions()
    {
        Positions = await PositionService.GetAllAsync();
    }
}
